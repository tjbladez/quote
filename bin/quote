#!/usr/bin/env ruby
require 'rubygems'
require 'quote'
require 'getoptlong'

USAGE = <<-EOU
To get a random quote type: #{'quote'.green}\n
Or you may use following options:
#{'quote --theme/-t <argument>'.green} to search for a match in themes (ex. 'movie')
#{'quote --quote/-q <argument>'.green} to search for a match in quote itself (ex. 'kick ass and chew gum')
#{'quote --context/-c <argument>'.green} to search for a match in context quote was originated (ex. 'pulp fiction')
#{'quote --source/-s <argument>'.green} to search for a match in originator of the quote (ex. 'the dude')
#{'quote --add/-a <argument>'.green} to add a quote your argument needs to be a valid JSON containing source, context, quote, theme params
#{'quote --all/-e'.green} to search for all quotes with matches
#{'quote --help/-h'.green} to see this message
You can see pretty colorized output if you set environment variable QUOTE_COLORIZE to 'true'.
You can specify your own path to quotes files via environment variable QUOTE_SOURCE.
Search by multiple criteria is supported.
EOU

opts = GetoptLong.new(['--help', '-h', GetoptLong::NO_ARGUMENT],
                      ['--all', '-e', GetoptLong::NO_ARGUMENT],
                      ['--add','-a', GetoptLong::REQUIRED_ARGUMENT],
                      ['--source','-s', GetoptLong::REQUIRED_ARGUMENT],
                      ['--context','-c', GetoptLong::REQUIRED_ARGUMENT],
                      ['--quote','-q', GetoptLong::REQUIRED_ARGUMENT],
                      ['--theme','-t', GetoptLong::REQUIRED_ARGUMENT])
criteria = {}
say_all = false
begin
opts.each do |flag, arg|
  case(flag)
  when '--help' then puts USAGE; exit(0)
  when '--add' then puts Quote.add(arg); exit(0)
  when '--all' then say_all = true
  else criteria[flag.gsub('--', '')] = arg
  end
end
rescue GetoptLong::InvalidOption => e
  puts "Please type quote -h for usage"
  exit(0)
rescue GetoptLong::MissingArgument => e
  puts "You do need to pass an argument for matching"
  exit(0)
end

puts say_all ? Quote.say_all(criteria) : Quote.say(criteria)